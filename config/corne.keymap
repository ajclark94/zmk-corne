/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_mins {
            bindings = <&kp MINUS>;
            key-positions = <4 7>;
        };

        combo_unds {
            bindings = <&kp UNDER>;
            key-positions = <16 19>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
       &kp ESC  &kp Q  &kp W     &kp E  &kp R          &kp T      &kp Y  &kp U      &kp I    &kp O     &kp P  &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S     &kp D  &kp F          &kp G      &kp H  &kp J      &kp K    &kp L  &kp SEMI   &kp SQT
     &kp LCTRL  &kp Z  &kp X     &kp C  &kp V          &kp B      &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH   &kp TAB
                              &kp LGUI  &mo 1  &kp BACKSPACE  &kp SPACE  &mo 2   &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB       &kp PERCENT             &kp AT        &kp LEFT_BRACE        &kp RIGHT_BRACE   &kp AMPS  &kp EQUAL        &kp N7        &kp N8        &kp N9    &kp PLUS  &kp BSPC
&kp GRAVE  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS   &kp EXCL   &kp STAR        &kp N4        &kp N5        &kp N6    &kp HASH   &kp TAB
&kp TILDE          &kp BSLH           &kp PIPE      &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp CARET  &kp UNDER  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOLLAR   &kp ESC
                                                              &trans                  &none     &trans  &kp SPACE        &kp N0        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp TAB       &kp ESC    &kp K_BACK         &kp K_FIND  &kp K_FORWARD        &kp INS     &trans    &trans  &trans    &trans     &trans  &kp BSPC
&kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI     &kp LEFT_SHIFT      &kp LCTRL  &kp LS(LCTRL)     &trans  &kp LEFT  &kp UP  &kp DOWN  &kp RIGHT    &trans
&kp LSHFT     &kp LC(Z)     &kp LC(X)          &kp LC(C)      &kp LC(V)   &kp LEFT_GUI     &trans    &trans  &trans    &trans     &trans    &trans
                                       &kp LC(LS(GRAVE))  &kp LC(LS(P))  &kp BACKSPACE  &kp SPACE     &none  &trans
            >;
        };
    };
};
